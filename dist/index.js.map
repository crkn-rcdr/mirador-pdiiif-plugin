{"mappings":"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","sources":["src/index.js","src/plugins/MiradorPDIIIFMenuItem.js","src/plugins/MiradorPDIIIFDialog.js"],"sourcesContent":["import MiradorPDIIIFMenuItemPlugin from \"./plugins/MiradorPDIIIFMenuItem\";\nimport MiradorPDIIIFDialogPlugin from \"./plugins/MiradorPDIIIFDialog\";\n\nexport { MiradorPDIIIFMenuItemPlugin, MiradorPDIIIFDialogPlugin };\n\nexport default [MiradorPDIIIFMenuItemPlugin, MiradorPDIIIFDialogPlugin];\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { getCanvasGroupings } from \"mirador/dist/es/src/state/selectors\";\nimport { estimatePdfSize } from \"pdiiif\";\n\n// select an icon from material icons to import and use: https://v4.mui.com/components/material-icons/\nimport PDFIcon from \"@material-ui/icons/PictureAsPdf\";\n\nconst dialogReducer = (state = {}, action) => {\n  if (action.type === \"OPEN_WINDOW_DIALOG\") {\n    return {\n      ...state,\n      [action.windowId]: {\n        openDialog: action.dialogType,\n      },\n    };\n  }\n\n  if (action.type === \"CLOSE_WINDOW_DIALOG\") {\n    return {\n      ...state,\n      [action.windowId]: {\n        openDialog: null,\n      },\n    };\n  }\n  return state;\n};\n\nconst PDIIIFReducer = (state = {}, action) => {\n  if (action.type === \"PDIIIF/ALLOW_PDF_DOWNLOAD\") {\n    return {\n      ...state,\n      [action.windowId]: {\n        ...state[action.windowId],\n        PDFDownloadEnabled: true,\n      },\n    };\n  }\n  if (action.type === \"PDIIIF/SET_ESTIMATED_SIZE\") {\n    return {\n      ...state,\n      [action.windowId]: {\n        ...state[action.windowId],\n        estimatedSizeInBytes: action.size,\n      },\n    };\n  }\n  return state;\n};\n\nconst mapStateToProps = (state, { windowId }) => ({\n  manifest: state.manifests[state.windows[windowId].manifestId],\n  canvasGroupings: getCanvasGroupings(state, { windowId }),\n  allowPdfDownload: state.PDIIIF[windowId]?.PDFDownloadEnabled ?? false,\n});\n\nconst mapDispatchToProps = (dispatch, { windowId }) => ({\n  setAllowPdfDownload: () =>\n    dispatch({ type: \"PDIIIF/ALLOW_PDF_DOWNLOAD\", windowId }),\n  setEstimatedSize: (size) =>\n    dispatch({ type: \"PDIIIF/SET_ESTIMATED_SIZE\", windowId, size }),\n  openDialog: () =>\n    dispatch({ type: \"OPEN_WINDOW_DIALOG\", windowId, dialogType: \"PDIIIF\" }),\n});\n\nclass PDIIIFMenuItem extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hasChecked: false,\n      supportsFilesystemAPI: typeof showSaveFilePicker === \"function\",\n    };\n  }\n\n  openDialogAndCloseMenu() {\n    const { handleClose, openDialog } = this.props;\n\n    openDialog();\n    handleClose();\n  }\n\n  async componentDidMount() {\n    const {\n      manifest,\n      canvasGroupings,\n      setAllowPdfDownload,\n      allowPdfDownload,\n      setEstimatedSize,\n    } = this.props;\n\n    if (allowPdfDownload || !this.state.supportsFilesystemAPI) {\n      this.setState({ hasChecked: true });\n      return;\n    }\n\n    if (!manifest?.error && manifest?.json) {\n      // Only show PDF's for PTO's\n      if (canvasGroupings.length > 1) {\n        // Check size can be estimated\n        const estimatedSizeInBytes = await estimatePdfSize({\n          manifest: manifest.json,\n          maxWidth: 1500,\n        });\n\n        // Estimated size, or 0\n        // N.B. Sometimes this is NaN, but not sure what triggers this\n        // it seems to be be caused bug in PDIIIIF trying to divide 0 by 0\n        if (estimatedSizeInBytes !== 0) {\n          setAllowPdfDownload();\n          setEstimatedSize(estimatedSizeInBytes);\n        }\n      }\n    }\n\n    this.setState({ hasChecked: true });\n  }\n\n  renderMenuItemText = () => {\n    const { hasChecked } = this.state;\n    const { allowPdfDownload } = this.props;\n\n    if (!hasChecked) {\n      return \"Checking document\";\n    }\n\n    if (allowPdfDownload) {\n      return \"Download PDF\";\n    }\n\n    return \"PDF Unavailable\";\n  };\n\n  render() {\n    const { classes, allowPdfDownload } = this.props;\n    const { hasChecked } = this.state;\n    return (\n      <div>\n        <MenuItem\n          disabled={!hasChecked || !allowPdfDownload}\n          onClick={() => this.openDialogAndCloseMenu()}\n        >\n          <ListItemIcon>\n            <PDFIcon />\n          </ListItemIcon>\n          <ListItemText primaryTypographyProps={{ variant: \"body1\" }}>\n            {this.renderMenuItemText()}\n          </ListItemText>\n          {!hasChecked && (\n            <CircularProgress size={15} className={classes.progress} />\n          )}\n        </MenuItem>\n      </div>\n    );\n  }\n}\n\nPDIIIFMenuItem.propTypes = {\n  allowPdfDownload: PropTypes.bool,\n  canvasGroupings: PropTypes.array.isRequired,\n  handleClose: PropTypes.func,\n  openPDIIIFDialog: PropTypes.func,\n  manifest: PropTypes.object.isRequired,\n  setAllowPdfDownload: PropTypes.func.isRequired,\n  setEstimatedSize: PropTypes.func.isRequired,\n};\n\nPDIIIFMenuItem.defaultProps = {\n  handleClose: () => {},\n  openPDIIIFDialog: () => {},\n};\n\nconst styles = () => ({\n  progress: {\n    marginLeft: \"2px\",\n  },\n});\n\nexport default {\n  target: \"WindowTopBarPluginMenu\",\n  mode: \"add\",\n  name: \"PDIIIFMenuItem\",\n  component: withStyles(styles)(PDIIIFMenuItem),\n  mapDispatchToProps,\n  mapStateToProps,\n  reducers: {\n    windowDialogs: dialogReducer,\n    PDIIIF: PDIIIFReducer,\n  },\n};\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { convertManifest } from \"pdiiif\";\n\nconst mapDispatchToProps = (dispatch, { windowId }) => ({\n  closeDialog: () => dispatch({ type: \"CLOSE_WINDOW_DIALOG\", windowId }),\n});\n\nconst mapStateToProps = (state, { windowId, containerId }) => ({\n  open:\n    state.windowDialogs[windowId] &&\n    state.windowDialogs[windowId].openDialog === \"PDIIIF\",\n  manifestId: state.windows[windowId].manifestId,\n  manifest: state.manifests[state.windows[windowId].manifestId],\n  containerId: state.config.id,\n  estimatedSize: state.PDIIIF[windowId]?.estimatedSizeInBytes,\n  allowPdfDownload: state.PDIIIF[windowId]?.allowPdfDownload,\n});\n\n/**\n * PDIIIFDialog ~\n */\nexport class PDIIIFDialog extends Component {\n  constructor(props) {\n    super(props);\n    this.props = props;\n    this.state = {\n      savingError: null,\n      supportsFilesystemAPI: typeof showSaveFilePicker === \"function\",\n    };\n  }\n\n  /**\n   * Format bytes to human readable string\n   */\n  formatBytes(bytes, decimals = 2) {\n    if (!+bytes) return \"0 Bytes\";\n\n    const k = 1024;\n    const dm = decimals < 0 ? 0 : decimals;\n    const sizes = [\n      \"Bytes\",\n      \"KiB\",\n      \"MiB\",\n      \"GiB\",\n      \"TiB\",\n      \"PiB\",\n      \"EiB\",\n      \"ZiB\",\n      \"YiB\",\n    ];\n\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n\n    return `${parseFloat((bytes / Math.pow(k, i)).toFixed(dm))} ${sizes[i]}`;\n  }\n\n  /**\n   * Downoloads the PDF\n   */\n  downloadPDF = async () => {\n    const { manifest } = this.props;\n    const { supportsFilesystemAPI } = this.state;\n    // Get a writable handle to a file on the user's machine\n\n    let handle;\n\n    // TODO: fully handle Firefox / server side generation with streams\n    if (supportsFilesystemAPI) {\n      // The error here will typically be a user hitting esc / cancel\n      try {\n        handle = await showSaveFilePicker({\n          suggestedName: `${manifest.json.label}.pdf`,\n          types: [\n            {\n              description: \"PDF file\",\n              accept: { \"application/pdf\": [\".pdf\"] },\n            },\n          ],\n        });\n      } catch (e) {\n        this.setState({ savingError: e.message });\n        return console.error(e);\n      }\n\n      try {\n        if (\n          (await handle.queryPermission({ mode: \"readwrite\" })) !== \"granted\"\n        ) {\n          // Throw error if permission is not granted\n          // N.B. I wasn't able to trigger this error (e.g. by choosing folder with strict permission)\n          // but it's here for completeness\n          throw new Error(\"Permission to write to file was not granted\");\n        } else {\n          // Reset the error state\n          this.setState({ savingError: null });\n\n          const pdfPath = (await handle.getFile()).name;\n          const webWritable = await handle.createWritable();\n\n          // Start the PDF generation\n          return await convertManifest(manifest, webWritable, {\n            maxWidth: 1500,\n            coverPageEndpoint: \"https://pdiiif.jbaiter.de/api/coverpage\",\n          });\n        }\n      } catch (e) {\n        // Display permission / conversion error\n        this.setState({ savingError: e.message });\n        return console.error(e);\n      }\n    }\n  };\n\n  /**\n   * Returns the rendered component\n   */\n  render() {\n    const { savingError } = this.state;\n    const {\n      classes,\n      closeDialog,\n      containerId,\n      open,\n      allowPdfDownload,\n      estimatedSize,\n    } = this.props;\n\n    if (!open || !allowPdfDownload) null;\n\n    return (\n      <Dialog\n        container={document.querySelector(`#${containerId} .mirador-viewer`)}\n        disableEnforceFocus\n        onClose={closeDialog}\n        open={open}\n        scroll=\"paper\"\n        fullWidth\n        maxWidth=\"xs\"\n      >\n        <DialogTitle disableTypography className={classes.h2}>\n          <Typography variant=\"h2\">PDF Download</Typography>\n        </DialogTitle>\n        <DialogContent>\n          {savingError && (\n            <DialogContentText>{savingError.message}</DialogContentText>\n          )}\n          <DialogContentText>\n            Download a PDF of the current document?\n            {estimatedSize\n              ? ` (Estimated file size: ${this.formatBytes(estimatedSize)})`\n              : \"\"}\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={this.downloadPDF} color=\"primary\">\n            Download\n          </Button>\n          <Button onClick={closeDialog} color=\"primary\">\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n    );\n  }\n}\n\nPDIIIFDialog.propTypes = {\n  classes: PropTypes.shape({\n    h2: PropTypes.string,\n    h3: PropTypes.string,\n  }).isRequired,\n  closeDialog: PropTypes.func.isRequired,\n  containerId: PropTypes.string.isRequired,\n  estimatedSize: PropTypes.number,\n  manifest: PropTypes.object,\n  manifestId: PropTypes.string,\n  allowPdfDownload: PropTypes.bool,\n  open: PropTypes.bool,\n  windowId: PropTypes.string.isRequired,\n};\n\nPDIIIFDialog.defaultProps = {\n  canvases: [],\n  open: false,\n};\n\nconst styles = () => ({\n  h2: {\n    paddingBottom: 0,\n  },\n  h3: {\n    marginTop: \"20px\",\n  },\n});\n\nexport default {\n  target: \"Window\",\n  mode: \"add\",\n  name: \"PDIIIFDialog\",\n  component: withStyles(styles)(PDIIIFDialog),\n  mapDispatchToProps,\n  mapStateToProps,\n};\n"],"names":[],"version":3,"file":"index.js.map"}